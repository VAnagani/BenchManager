

@model IEnumerable<BenchMANAGER.Models.Employee>

@{

    var grid = new WebGrid(Model, canPage: true, rowsPerPage: 10,
    selectionFieldName: "SelectedRow", ajaxUpdateContainerId: "gridContent");
    grid.Pager(WebGridPagerModes.All);
    
}


<div id="gridContent">
    @grid.GetHtml(tableStyle: "webGrid",
 headerStyle: "header",
 alternatingRowStyle: "alt",
 selectedRowStyle: "select",
 mode: WebGridPagerModes.All,
 firstText: "<< First",
 previousText: "< Prev",
 nextText: "Next >",
 lastText: "Last >>",
 htmlAttributes: new { id = "employeeGrid" },
 columns: grid.Columns(
 grid.Column("EmployeeNumber", "Employee Number", format: (item) => item.GetSelectLink(item.EmployeeNumber.ToString())),
 //grid.Column("EmployeeNumber", "Employee Number", format: @<text><a href="#" class="webGridLink">@item.EmployeeNumber</a></text>),
 //grid.Column("EmployeeNumber", "Employee Number", format: item => Html.ActionLink(((int)item.EmployeeNumber).ToString(),"","", new { @class="webGridLink" })),
     grid.Column("FirstName", " First Name"),
     grid.Column("LastName", "Last Name"),
     grid.Column("Practice", "Practice"),
     grid.Column("ProjectManager", "Project Manager"),
     grid.Column("Utilization", "Utilization %")

))
    @*<script type="text/javascript">
    function updateGrid() {
        @Html.Raw(HttpUtility.HtmlDecode(grid.GetContainerUpdateScript("/?page=" + (grid.PageIndex + 1)).ToString()))
    }
    </script>*@
</div>


